<h1>About</h1>
<p>個人倉儲：<a href="https://github.com/40823204/cd2021">https://github.com/40823204/cd2021</a></p>
<p>兩人小組成員：<a href="https://40823220.github.io/cd2021/content/About.html">40823220</a></p>
<p>兩人小組倉儲：<a href="https://github.com/40823204/stage1-bg24">https://github.com/40823204/stage1-bg24</a></p>
<p>四人小組成員:<a href="https://40823228.github.io/cd2021/content/index.html">40823228</a> <a href="https://40823242.github.io/cd2021/content/index.html">40823242</a> <a href="https://40823220.github.io/cd2021/content/index.html">40823220</a></p>
<h1>stage1</h1>
<p>主題:升降機構</p>
<p>繪圖:40823220</p>
<p>模擬:40823204</p>
<p>網頁編輯:50823204</p>
<h3>w1</h3>
<p>進度</p>
<p>1.建立網頁</p>
<p>2.Leo</p>
<p>3.ssh</p>
<p><img alt="" height="290" src="/images/chrome_dhBvpO7Rld.png" width="380"/></p>
<p>4.影片</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/5hpsTemq_AI" width="560"></iframe></p>
<h2>w2-3</h2>
<p><strong>小組繪圖</strong></p>
<p>主題：升降裝置</p>
<p>動機：<span>大型可用來載人，小型可用在各種自動化機械</span></p>
<p><strong>分配工作：</strong></p>
<p>舊版：40823220設計</p>
<p>新版：40823204修改</p>
<p><img alt="" height="250" src="/images/chrome_Z27NVDM1FD.png" width="200"/><img alt="" height="250" src="/images/chrome_x3EvRaVO44.png" width="200"/></p>
<p><strong>參考影片</strong></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/FFMZxfj-vSE" width="560"></iframe></p>
<p><strong>影片</strong></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/b_QrnGpD-zU" width="560"></iframe><span></span></p>
<h4>新版</h4>
<p><strong>圖檔資料下載處 </strong><strong><a href="/downloads/升降裝置.zip">升降裝置.zip</a></strong></p>
<p><strong>設計要點：</strong></p>
<p><b>此版新增了<span style="color: #ff0000;">驅動輪</span>和<span style="color: #ff0000;">蘇格蘭軛<span style="color: #000000;">用以</span></span>驅動裝置</b></p>
<p>蘇格蘭軛的旋轉係數 (他會直接影響裝置的上升、下降<span style="color: #ff0000;">高度</span>)</p>
<p><img alt="" height="180" src="/images/S__77619202.jpg" width="200"/> <img alt="" height="180" src="/images/驅動輪2.gif" width="200"/> <img alt="" height="180" src="/images/蘇格蘭軛.gif" width="200"/></p>
<p><strong>成品圖</strong></p>
<p><img alt="" height="270" src="/images/組合3_0.jpg" width="300"/></p>
<h4>舊版</h4>
<p><strong>此裝置與新版的差異為<span style="color: #ff0000;">無驅動機構</span></strong></p>
<p><strong><span style="color: #ff0000;"></span></strong></p>
<p><span style="color: #000000;"><strong>無驅動依據的組合圖</strong></span></p>
<p><span style="color: #000000;"><strong><img alt="" height="180" src="/images/組合1.jpg" width="220"/></strong></span></p>
<p><span style="color: #000000;"><strong>修改前、後之對照圖</strong></span></p>
<p><span style="color: #000000;"><strong><img alt="" height="220" src="/images/底板.jpg" width="250"/> <img alt="" height="220" src="/images/底板4_0.jpg" width="250"/></strong></span></p>
<h2>w4報告</h2>
<p>本周內容</p>
<p><strong>1.本週進度主要是用CoppsliaSim做模擬</strong></p>
<p><strong><img alt="" height="220" src="/images/coppeliaSim_pF3MoMV1ub.png" width="280"/></strong></p>
<p><strong>2.解決小組網站合併衝突的問題、新增協同者</strong></p>
<h5>pull request 問題</h5>
<h4><strong>問題：協同網站更新後，另一組員的網頁內容未更新</strong></h4>
<p>解決方法：</p>
<p>1.pull之前要進.git改config -把學號改成對方的 (組長不用)</p>
<p>2.在倉儲名稱下git pull</p>
<p>3.push前在config改回自己的學號(組長不用)</p>
<p> 4.push完成新增pull request (組員才要做)</p>
<p><strong>3.報告製作</strong></p>
<p><strong>4.影片</strong></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/xJpD0zKPf2I" width="560"></iframe></p>
<h5>CoppeliaSim測試</h5>
<p><span>問題：主動輪旋轉時會卡卡的，主動輪帶動滑軌，滑軌會跑出軌道外</span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/UD4emqYJmWo" width="560"></iframe></p>
<h2>PDF</h2>
<p><strong>PDF連結網址：</strong><a href="/downloads/2021-協同產品設計實習-stage1-bg24.pdf">2021-協同產品設計實習-stage1-bg24.pdf</a></p>
<h5></h5>
<h2>coppelia模擬</h2>
<p><span>在stage1報告中還不了解coppelia的操作,但後來經過摸索及學習後,我逐漸領悟出其訣竅,以下是我模擬的歷程,最終結果我放在stage3中的task2下</span></p>
<p><span>延續stage1未完成的模擬部分，繼續進行模擬</span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/UD4emqYJmWo" width="560"></iframe></p>
<p><strong>W11模擬   模擬檔:<a href="/downloads/6666677.7z">測試1</a></strong></p>
<p>問題:把joint於旋轉軸結合時，驅動時無法使連桿前後滑動</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/z2rzpaUS4Z0" title="YouTube video player" width="560"></iframe></p>
<p><strong>W12模擬   模擬檔:<a href="/downloads/88.zip">測試2</a></strong></p>
<p>內容:依上面視頻內容的問題，改變joint的連接進行模擬</p>
<p><span>問題:還無法將旋轉軸及滑塊產生相對運動</span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/KnqvqlKtw6s" title="YouTube video player" width="560"></iframe></p>
<h1>stage2</h1>
<p>主題:搬運車</p>
<p>繪圖:40823204、40823220</p>
<h3>w5 討論</h3>
<p><span>03/22討論主題</span></p>
<p><span>最初與組員討論的是設計遊戲設施</span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/ZHwuVze7hMQ" title="YouTube video player" width="560"></iframe></p>
<p>3/25與40823220組員討論後我們決定設計搬運車，並與其他組員討論後，先決定分兩組設計一組機構，再決定</p>
<h2>w6-7</h2>
<p><strong>四人小組運作模式:先分為兩小組各自設計一組方案，待各組接完成設計後，再決定要選哪個方案</strong></p>
<p><strong>方案1:40823204/40823220設計</strong></p>
<p>主題:搬運車</p>
<p>動機:主要用於工地裝水泥的箱子的搬運，達到工作上安全、省時、省力的要求</p>
<p>優點:操作簡單，使用方便，成本低</p>
<p>缺點:雖然橘色大型塑膠箱使用很廣泛，但本裝置只適用於一種尺寸的箱子，而且箱子兩側必須有"耳朵"</p>
<p><strong>資料下載處-</strong><a href="/downloads/搬運機.zip">搬運機.zip</a></p>
<p><strong>搬運車機構圖</strong></p>
<p><img alt="" height="250" src="/images/ApplicationFrameHost_5FtAP6tV2v.png" width="300"/></p>
<p><img alt="" height="250" src="/images/ApplicationFrameHost_ZEx4UBcWNN.png" width="300"/></p>
<p><strong>搬運箱子</strong>-參考一般常見橘色塑膠桶，方便搬運車機構作動時連桿能扣住雙耳</p>
<p><img alt="" height="250" src="/images/Inventor_ZsBpoi9BGm.png" width="300"/>    <img alt="" height="250" src="/images/21512722300522_225_m.jpg" width="300"/></p>
<p>參考影片</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/lBvupDcRfts" title="YouTube video player" width="560"></iframe></p>
<p></p>
<h2>w8 solidworks模擬動畫</h2>
<p>程式模擬</p>
<p>1.使用coppeliasim模擬時，由於組合零件多達70種，導致我們模擬不出來，</p>
<p>經由組員討論，決定使用solidworks和inventor分別模擬</p>
<p><strong>(一)使用solidworks2014做動畫模擬</strong></p>
<p>圖檔/動畫下載區:<a href="/downloads/搬運機sd.zip">搬運機sd.zip</a>   <a href="/downloads/搬運機video.zip">搬運機video.zip</a></p>
<p><img alt="" height="200" src="/images/SLDWORKS_v3v8sYh3Vn.png" width="300"/></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/xQkyIcfL3Gg" title="YouTube video player" width="560"></iframe></p>
<p><strong>(二)使用inventor 模擬動畫</strong></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/7b0H24pmaM0" title="YouTube video player" width="560"></iframe></p>
<h2>w9報告</h2>
<p>個人心得</p>
<p><span>有了二人小組的經驗，我們在四人小組中討論起來更加得心印手，分配工作上不像在二人小組的時候，有很多東西要處 理，工作上較為輕鬆，可以依個人的專長分配不同的工作， 但在網站上的維護就提升了許多，需要大家一起溝通調協。</span></p>
<h2>coppelia</h2>
<p><span>在stage2報告中我們還沒模擬成功,但後來經過摸索及學習後,我逐漸領悟出其訣竅,以下是我模擬的歷程,最終結果我放在stage3中的task2下</span></p>
<p>第一次模擬</p>
<p>內容:針對每個接點進行軸的連接</p>
<p>問題:因還未寫入程式,無法進行控制</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/uT7ikfRPrn0" title="YouTube video player" width="560"></iframe></p>
<p>第二次測試</p>
<p>內容:寫入lua程式</p>
<p>檔案下載處:<a href="/downloads/S2-2.zip">搬運機.zip</a></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/4c9rG2s4jek" title="YouTube video player" width="560"></iframe></p>
<h1>stage3</h1>
<p>九人小組成員:40823204 40823205 40823220 40823221 40823228 40823237 40823242 40823250 40832244</p>
<h3>task2</h3>
<h3>s1</h3>
<p><strong>stage1升降裝置</strong></p>
<p><strong>1.程式控制方式:python remote api</strong></p>
<p>內容:在stage1報告中,因還未熟悉coppelia的操作還未將coppelia模擬出來及寫入程式,但經過後來自己慢慢摸索和嘗試,已經把整體大概都模擬出來了,以下是我用remote api對場景做控制的畫面</p>
<p>coppelia檔案下載處:<a href="/downloads/S1-2.zip">S1-2.zip</a></p>
<p>api.py檔案下載處:<a href="/downloads/S1-2api.zip">S1-2api.zip</a></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/861JHEgRNk0" title="YouTube video player" width="560"></iframe></p>
<p><strong>2.程式控制方式:Lua script</strong></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/5KOSX5AEUPo" title="YouTube video player" width="560"></iframe></p>
<h3>s2</h3>
<p><strong>stage2搬運車</strong></p>
<p><strong>1.程式控制方式:python remote api</strong></p>
<p>內容:在stage2報告中,我們未將coppelia模擬出來及寫入程式,但經過後來自己慢慢摸索和嘗試,已經把整體大概都模擬出來了,以下是我用remote api對場景做控制的畫面</p>
<p>coppelia檔案下載處在stage2中的第二次測試下</p>
<p>api.py檔案下載處:<a href="/downloads/S2-2api.zip">S2-2api.zip</a></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/H0m3scUj7iM" title="YouTube video player" width="560"></iframe></p>
<h2>w13</h2>
<p>內容:對RoboDK進行控制</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/yWgwEQ3DNv0" title="YouTube video player" width="560"></iframe></p>
<h2>w15影片字幕整理</h2>
<h3>part1</h3>
<p>本周進度:研究下面影片內容</p>
<p>如何將下列英文字幕翻譯為中文:點選設定&gt;字幕&gt;自動翻譯&gt;中文(繁體)</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/IKOGwoJ2HLk" title="YouTube video player" width="560"></iframe></p>
<p>影片內容大綱:</p>
<p>tool tip pose 工具提示姿態</p>
<p>此雙連桿機器人的<span>工具提示姿態是由兩個數字簡單描述，座標x和y相對於世界坐標系，因此，藉由給定的x和y，要確定連接角q1和q2</span></p>
<p><strong>影片內容是以幾何的方法解決</strong></p>
<p><strong>步驟1:以畢氏定理得知r的平方=x的平方+y的平方</strong></p>
<p><span><img alt="" height="200" src="/images/chrome_2fOYFELK7i.png" width="300"/></span></p>
<p><strong>步驟2:確認角度alpha,由</strong><strong>餘弦定理得</strong></p>
<p><strong><img alt="" height="200" src="/images/chrome_DXYtRU8zWc.png" width="300"/><img alt="" height="200" src="/images/chrome_z4gxCMCvuZ.png" width="300"/></strong></p>
<p><strong>字幕整理:</strong></p>
<table style="width: 796px;">
<tbody>
<tr style="height: 32px;">
<td style="width: 308.225px; height: 32px;"><span>We saw this simple two-link robot in the previous lecture about forward kinematics.</span></td>
<td style="width: 278.775px; height: 32px;"><span>我們在上一堂關於正向運動學的課程中看到這個簡單的雙連桿機構。</span></td>
</tr>
<tr style="height: 66px;">
<td style="width: 308.225px; height: 66px;">
<p>The tooltip pose of this robot is described simply by two numbers, the coordinates x and y with respect to the world coordinate frame.</p>
</td>
<td style="width: 278.775px; height: 66px;"><span>該機構的提示框由兩個數字簡單描述，相對於絕對坐標系的坐標 x 和 y。</span></td>
</tr>
<tr style="height: 32px;">
<td style="width: 308.225px; height: 32px;"><span>So, the problem here is that given x and y, we want to determine the joined angles, q1 and q2.</span></td>
<td style="width: 278.775px; height: 32px;"><span>所以，這裡的問題是有了x和y條件，我們要求解連接角q1和q2的值為多少。</span></td>
</tr>
<tr style="height: 29px;">
<td style="width: 308.225px; height: 29px;"><span>The solution that we’re going to follow in this particular section is a geometric one.</span></td>
<td style="width: 278.775px; height: 29px;"><span>我們利用特定幾何來解決這個問題。</span></td>
</tr>
<tr style="height: 14px;">
<td style="width: 308.225px; height: 14px;"><span>We’re going to start with a simple piece of construction.</span></td>
<td style="width: 278.775px; height: 14px;"><span>我們從一個簡單的結構開始。</span></td>
</tr>
<tr style="height: 14px;">
<td style="width: 308.225px; height: 14px;"><span>We’re going to overlay the red triangle on top of our robot.</span></td>
<td style="width: 278.775px; height: 14px;"><span>我們將在機構上覆蓋紅色三角形。</span></td>
</tr>
<tr style="height: 14px;">
<td style="width: 308.225px; height: 14px;"><span>We know that the end point coordinate is x, y, so the vertical height of the triangle is y, the horizontal width is x.</span></td>
<td style="width: 278.775px; height: 14px;"><span>我們知道最終坐標是x，y，所以三角形的垂直高度為y，水平寬度為x。</span></td>
</tr>
<tr style="height: 14px;">
<td style="width: 308.225px; height: 14px;"><span>And, using Pythagoras theorem, we can write r squared equals x squared plus y squared.</span></td>
<td style="width: 278.775px; height: 14px;"><span>然後，利用Pythagorean theorem(畢氏定理)，我們可寫出 r² = x ²+ y²。</span></td>
</tr>
<tr style="height: 14px;">
<td style="width: 308.225px; height: 14px;"><span>So far, so easy.</span></td>
<td style="width: 278.775px; height: 14px;"><span>到目前為止都很容易。</span></td>
</tr>
<tr style="height: 14px;">
<td style="width: 308.225px; height: 14px;"><span>Now, w’re going to look at this triangle highlighted here in red and we want to determine the angle alpha.</span></td>
<td style="width: 278.775px; height: 14px;"><span>現在，我們查看此處凸顯的紅色三角形，並且要確定α角。</span></td>
</tr>
<tr style="height: 14px;">
<td style="width: 308.225px; height: 14px;"><span>In order to do that, we need to use the cosine rule.</span></td>
<td style="width: 278.775px; height: 14px;"><span>為了做到這一點，我們須使用餘弦定理。</span></td>
</tr>
<tr style="height: 14px;">
<td style="width: 308.225px; height: 14px;"><span>And, if you’re a little rusty on the cosine rule, here is a bit of a refresher.</span></td>
<td style="width: 278.775px; height: 14px;"><span>如果你對餘弦定理有點生疏，這裡可以幫助你複習一下。</span></td>
</tr>
<tr style="height: 14px;">
<td style="width: 308.225px; height: 14px;"><span>We have an arbitrary triangle.</span></td>
<td style="width: 278.775px; height: 14px;"><span>有一個任意三角形。</span></td>
</tr>
<tr style="height: 14px;">
<td style="width: 308.225px; height: 14px;"><span>We don’t have any right angles in it and we’re going to label the length of this edge as A and the angle opposite that edge, we’re going to label as little a.</span></td>
<td style="width: 278.775px; height: 14px;"><span>三角形中沒有任何的直角，將這邊的角度標為小a，而對邊的長度標為A。</span></td>
</tr>
<tr style="height: 14px;">
<td style="width: 308.225px; height: 14px;"><span>And, we do the same for this edge and this angle, and this edge and this angle.</span></td>
<td style="width: 278.775px; height: 14px;"><span>我們再對這邊和這個角，以及這邊和這個叫做同樣的事。</span></td>
</tr>
<tr style="height: 14px;">
<td style="width: 308.225px; height: 14px;"><span>So, all together, the sides are labelled capitals A, B and C, and the angles are labelled little a, little b, and little c.</span></td>
<td style="width: 278.775px; height: 14px;"><span>以此類推，所有邊都標記為A, B, C，角都標記為a, b, c 。</span></td>
</tr>
<tr style="height: 14px;">
<td style="width: 308.225px; height: 14px;"><span>So, the cosine rule is simply this relationship here.</span></td>
<td style="width: 278.775px; height: 14px;"><span>餘弦定理就是這種關係。</span></td>
</tr>
<tr style="height: 14px;">
<td style="width: 308.225px; height: 14px;"><span>It’s a bit like Pythagoras’ theorem except for this extra term on the end with the cos a in it.</span></td>
<td style="width: 278.775px; height: 14px;"><span>它有點像畢達哥拉斯定理，不同之處是末端多出了cos a。</span></td>
</tr>
<tr style="height: 14px;">
<td style="width: 308.225px; height: 14px;"><span>Now, let’s apply the cosine rule to the particular triangle we looked at a moment ago.</span></td>
<td style="width: 278.775px; height: 14px;"><span>將餘弦定理套用於剛剛看到的特定三角形。</span></td>
</tr>
<tr style="height: 14px;">
<td style="width: 308.225px; height: 14px;"><span>It’s pretty straightforward to write down this particular relationship.</span></td>
<td style="width: 278.775px; height: 14px;"><span>寫下此特殊關係很簡單。</span></td>
</tr>
<tr style="height: 14px;">
<td style="width: 308.225px; height: 14px;"><span><span>We can isolate the term cos alpha which gives us the angle alpha that we’re interested in.</span></span>And, it’s defined in terms of the constant link lengths, A1 and A2 and the position of the end effector, x and y.</td>
<td style="width: 278.775px; height: 14px;"><span>我們可分離出 cosα ，只需要得知α角度作為條件。它是根據恆定連桿長度A1和A2以及最終執行器的位置x和y定義。</span><span></span></td>
</tr>
<tr style="height: 14px;">
<td style="width: 308.225px; height: 14px;"><span>We can write this simple relationship between the angles alpha and q2.And, we know from the shape of the cosine function that cos of q2 must be equal to negative of cos alpha.</span><span></span></td>
<td style="width: 278.775px; height: 14px;"><span>我們可寫出角度α和q2之間的簡單關係。並且我們從餘弦函數中得知cos q2必須等於 –cos α。</span><span></span></td>
</tr>
<tr style="height: 14px;">
<td style="width: 308.225px; height: 14px;"><span>This time, let’s just write an expression for the cosine of the joined angle q2.</span><span></span></td>
<td style="width: 278.775px; height: 14px;"><span>這次寫出餘弦在連接角q2的表達式。</span><span></span></td>
</tr>
<tr style="height: 14px;">
<td style="width: 308.225px; height: 14px;"><span>Now, we’re going to draw yet another red triangle and we’re going apply some simple trigonometry here.</span><span></span></td>
<td style="width: 278.775px; height: 14px;"><span>我們繪製另一個紅色三角形，並應用三角函數。</span><span></span></td>
</tr>
<tr style="height: 14px;">
<td style="width: 308.225px; height: 14px;"><span>If we know q2, then we know this length and this length of the red triangle.We can write this relationship for the sine of the joined angle q2.</span><span></span></td>
<td style="width: 278.775px; height: 14px;"><span><span>如果我們知道q2，就可知道這個長度和這個三角形的長度。</span></span><span></span>我們可以在連接角q2寫出正弦關係。</td>
</tr>
<tr style="height: 14px;">
<td style="width: 308.225px; height: 14px;"><span>Now, we can consider this bigger triangle whose angle is beta and this side length of this triangle is given here in blue.And, the length of the other side of the triangle is this.</span><span></span></td>
<td style="width: 278.775px; height: 14px;"><span>現在我們考慮這個大一點的三角形，它角度是β，此三角形的邊長由藍色表示。且三角形另一邊長度是這個。</span><span></span></td>
</tr>
<tr style="height: 14px;">
<td style="width: 308.225px; height: 14px;"><span>So, now we can write an expression for the angle beta in terms of these parameters here.Going back to the red triangle that we drew earlier, we can establish a relationship between q1 and the angle beta.</span></td>
<td style="width: 278.775px; height: 14px;"><span>我們可在此根據參數寫出角度β的表達式。回到之前畫的紅色三角形，我們可建立出q1和β的關係。</span></td>
</tr>
<tr style="height: 14px;">
<td style="width: 308.225px; height: 14px;"><span>Introduce yet another angle, this one gamma and we can write a relationship between the angle gamma and the tooltip coordinates x and y.Now, we can write a simple relationship between the angles that we’ve constructed, gamma and beta and the joined angle we’re interested in which is q1.And, the total relationship looks something like this.</span></td>
<td style="width: 278.775px; height: 14px;">
<p>引入另一個角度ɣ，可寫出角度ɣ和提示框座標x和y之間的關係。<span>現在我們可建構出角度β和ɣ與連接角度q1之間的關係。而且，整個關係看起來像這樣。</span></p>
<p></p>
</td>
</tr>
<tr style="height: 14px;">
<td style="width: 308.225px; height: 14px;"><span>Quite a complex relationship, it gives us the angle of joined one, that’s q1 in terms of the end effector coordinates y and x, and a bunch of constants, a1 and a2, and it’s also a function of the second joint angle, q2.</span></td>
<td style="width: 278.775px; height: 14px;"><span>相當複雜的關係，它提供連接的角度，即最終執行器坐標 y 和 x 的 q1，以及一系列常數 a1 和 a2，它也是第二個關節角度 q2 的函數。</span></td>
</tr>
<tr style="height: 14px;">
<td style="width: 308.225px; height: 14px;"><span>So, let’s summarize what it is that we have derived here.We have an expression for the cosine of q2 and we have an expression for q1.Now, the cosine function is symmetrical about 0.</span></td>
<td style="width: 278.775px; height: 14px;"><span>所以，總結我們在這裡得出了什麼。我們有q2餘弦方程式與q1方程式。餘弦函數在0對稱。</span></td>
</tr>
<tr style="height: 14px;">
<td style="width: 308.225px; height: 14px;"><span>So, if we know the value of the cosine of q2, then there are two possible solutions a positive angle and a negative angle.We’re going to explicitly choose the positive angle. Which means that I can write this expression here.</span></td>
<td style="width: 278.775px; height: 14px;"><span>所以我們知道cosq2的值可能為正角和負角。我們選擇正角，表示我可以寫出此表達式。</span></td>
</tr>
<tr style="height: 14px;">
<td style="width: 308.225px; height: 14px;"><span>And now, we have what we call the inverse kinematic solution for this two-link robot.We have an expression for the two joined angles, q1 and q2 in terms of the end effector pose x and y, and a bunch of constants.</span></td>
<td style="width: 278.775px; height: 14px;"><span>現在我們能用逆向運動學來解決雙連桿機構。我們有兩個連接角 q1 和 q2 的表達式，根據最終執行器的x 和 y 以及一系列常數。</span></td>
</tr>
<tr style="height: 14px;">
<td style="width: 308.225px; height: 14px;"><span>You notice that the two equations are not independent.The equation for q1, in fact, depends on the solution for q2.In this case, q2 is negative and we’re going to write the solution for q2 with a negative sign in front of the inverse cosine.</span></td>
<td style="width: 278.775px; height: 14px;"><span>你要注意到兩方程式不是獨立的。事實上，q1方程式取決於q2的解。在這情況下，q2為負，我們將在q2反餘弦的解前面加上負號。</span></td>
</tr>
<tr style="height: 14px;">
<td style="width: 308.225px; height: 14px;"><span>Now, we need to solve for q1, so we’re going to introduce this particular red triangle, the angle beta that we solved previously, and the angle gamma which is defined in terms of y and x.</span></td>
<td style="width: 278.775px; height: 14px;"><span>我們需求解q1，因此采用這個特定的三角形，之前求解的角度β以及根據y和x定義的角度ɣ。</span></td>
</tr>
<tr style="height: 14px;">
<td style="width: 308.225px; height: 14px;"><span>Now, we write a slightly different relationship between q1, gamma and beta, different to what we had before.There’s a change of sign involved.</span></td>
<td style="width: 278.775px; height: 14px;"><span>q1、ɣ和β之間的關西，和之前求的不同。涉及到符號的變化。</span></td>
</tr>
<tr style="height: 14px;">
<td style="width: 308.225px; height: 14px;"><span>Then, we can substitute all that previous equation and come up with this expression for q1.Again, there is a change of sign here.Previously, this was a negative sign.</span></td>
<td style="width: 278.775px; height: 14px;"><span>然後我們可代換之前所有等式，並求得此q1方程式。同樣，這裡的符號發生了變化。先前，這是個負號。</span></td>
</tr>
<tr style="height: 14px;">
<td style="width: 308.225px; height: 14px;"><span>And, here in summary form is the solution for the inverse kinematics of our two-link robot when it is in this particular configuration, where q2 is negative.</span></td>
<td style="width: 278.775px; height: 14px;"><span>這是雙連桿機構在此逆向運動學的總形式，其中q2為負。</span></td>
</tr>
<tr style="height: 14px;">
<td style="width: 308.225px; height: 14px;"><span>Let’s compare the two solutions, the case where q2 is positive and the case where q2 is negative.</span></td>
<td style="width: 278.775px; height: 14px;"><span>讓我們比較兩個解決方案，q2為正和q2為負的情況。</span></td>
</tr>
<tr style="height: 14px;">
<td style="width: 308.225px; height: 14px;"></td>
<td style="width: 278.775px; height: 14px;"></td>
</tr>
<tr style="height: 14.1207px;">
<td style="width: 308.225px; height: 14.1207px;"></td>
<td style="width: 278.775px; height: 14.1207px;"></td>
</tr>
</tbody>
</table>
<p></p>
<p></p>
<p></p>
<p></p>
<p></p>
<p></p>
<p></p>
<p></p>
<p></p>
<p></p>
<p></p>
<p></p>
<p></p>
<p></p>
<p></p>
<p></p>
<p></p>
<p></p>
<p></p>
<p></p>
<p></p>
<h3>part2</h3>
<p>本周進度:研究下面影片內容</p>
<p>如何將下列英文字幕翻譯為中文:點選設定&gt;字幕&gt;自動翻譯&gt;中文(繁體)</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/eIZuz1XCd0w" title="YouTube video player" width="560"></iframe></p>
<p><strong>字幕整理:</strong></p>
<table style="width: 800px;">
<tbody>
<tr style="height: 73px;">
<td style="width: 334.098px; height: 73px;"><span>Here we have the same two link robot as we just looked at but this time we're going tosolve it using an analytical approach , that is we're going to rely much more on algebra ,particular linear algebra rather than geometry .</span></td>
<td style="width: 235.902px; height: 73px;"><span>在這裡，我們有與前一篇相同的兩連桿機械手臂，但這次我們將使用分析方法來解決它，意味著我們將更多地依賴代數，特別是使用線性代數而不是幾何。</span></td>
</tr>
<tr style="height: 88px;">
<td style="width: 334.098px; height: 88px;"><span>We have an expression E , which is the homogeneous transformation which represents the pose of the robots endefector and we looked at this in the last lecture , we can write the endefector pose as a sequence of elementary homogeneous transformations .</span></td>
<td style="width: 235.902px; height: 88px;"><span>我們有一個表達式 E，它是表示機械手臂最終位置的齊次變換式，我們在上一課中看到了這一點，我們可以將最終位置寫為一系列基本齊次變換式。</span></td>
</tr>
<tr style="height: 88.1875px;">
<td style="width: 334.098px; height: 88.1875px;"><span>A rotation by Q1 , a translation along the X direction by A1 , a rotation by Q2 and then a translation in the X direction by A2 .</span></td>
<td style="width: 235.902px; height: 88.1875px;"><span>Q1 旋轉，A1 沿 X 方向平移，Q2 旋轉，然後 A2 沿 X 方向平移。</span></td>
</tr>
<tr style="height: 88px;">
<td style="width: 334.098px; height: 88px;"><span>If I expand this out , multiply all the transformations together , I get the expression shown here ; a three by three homogeneous transformation matrix representing the pose of the robot's endefector.</span></td>
<td style="width: 235.902px; height: 88px;"><span>如果我將其展開，將所有變換相乘，就會得到此處所示的表達式 E ;它是一個三乘三的齊次變換矩陣，表示機械手臂的最終的位置。</span></td>
</tr>
<tr style="height: 88px;">
<td style="width: 334.098px; height: 88px;"><span>Now for this particular two link robot , we are only interested in the position of its endefector , it's X and Y co - ordinate and they are these two elements within the homogeneous transformation matrix , so I'm going to copy those out .</span></td>
<td style="width: 235.902px; height: 88px;"><span>現在對於這個特殊的兩連桿機器人，我們只對它的最終位置感興趣，與它有關的是 X 和 Y 坐標，它們是齊次變換矩陣中的這兩個元素，所以我將把它們複製出來。</span></td>
</tr>
<tr style="height: 88px;">
<td style="width: 334.098px; height: 88px;"><span>So here again is our expression for X and Y and what we're going to do is a fairly common trick , we're going to square and add these two equations and I get a relationship that looks like this .</span></td>
<td style="width: 235.902px; height: 88px;"><span>所以這裡又是我們對 X 和 Y 的表達式，我們要做的是一個相當常見的技巧，我們要將它平方並將這兩個方程相加，我得到一個看起來像這樣的關係式。</span></td>
</tr>
<tr style="height: 88px;">
<td style="width: 334.098px; height: 88px;"><span>Now I can solve for the joint angle Q2 in terms of the endefector pose X and Y and the robot's constants A1 and A2.</span></td>
<td style="width: 235.902px; height: 88px;"><span>現在我可以根據最終位置X和Y以及機械手臂的常數A1及A2來求出關節角度Q2。</span></td>
</tr>
<tr style="height: 88px;">
<td style="width: 334.098px; height: 88px;"><span>Now what I'm going to do is apply the sum of angles identity .</span></td>
<td style="width: 235.902px; height: 88px;"><span>現在我要做的是應用角度之和的特性。</span></td>
</tr>
<tr style="height: 88px;">
<td style="width: 334.098px; height: 88px;"><span>I'm going to expand these terms, sine of Q1 plus Q2 or cos of Q1 plus Q2 and to make life a little bit easier, I'm going to make some substations, so where ever I had cos Q2, I'm going to write C2 and where ever I had sine Q2, I'm going to write S2.</span></td>
<td style="width: 235.902px; height: 88px;"><span>我將展開這些項，Q1 的正弦加 Q2 或 Q1 的餘弦加 Q2，為了讓生活更輕鬆一點，我將建立一些分部，所以只要有 cos Q2，我會將其取代為C2並且在有正弦Q2的地方，我會將其取代為S2。</span></td>
</tr>
<tr style="height: 88px;">
<td style="width: 334.098px; height: 88px;"><span>It's a fairly common shorthand when people are looking at robot kinematic equations.</span></td>
<td style="width: 235.902px; height: 88px;"><span>當人們解決機械手臂運動學方程式時，這是一個相當常見的快速記法。</span></td>
</tr>
<tr style="height: 88px;">
<td style="width: 334.098px; height: 88px;"><span>And here are the equations after making those substitutions.</span></td>
<td style="width: 235.902px; height: 88px;"><span>這是進行替換後的方程式。</span></td>
</tr>
<tr style="height: 88px;">
<td style="width: 334.098px; height: 88px;"><span>Looking at these two equations, I can see that they fall into a very well known form and for that form there is a very well known solution.</span></td>
<td style="width: 235.902px; height: 88px;"><span>看看這兩個方程式，我可以看到它們屬於一個眾所周知的形式，對於這種形式，有一個淺顯易見的解決方案。</span></td>
</tr>
<tr style="height: 88px;">
<td style="width: 334.098px; height: 88px;"><span>So I'm going to consider just one of the equations, the equation for Y and using our well known identity and it's solution, I can determine the values for the variables little a, little b and little c and once l've determined those, then I can just write down the solution for Q1, which x is the equivalent of theta in this particular case.</span></td>
<td style="width: 235.902px; height: 88px;"><span>所以我將只考慮其中一個方程，Y 的方程，並使用我們眾所周知的恆等式和它的解，我可以確定變量小 a、小 b 和小 c 的值，一旦我確定了這些，然後我可以寫下 Q1 的解決方程，在這種特殊情況下，x 相當於 theta。</span></td>
</tr>
<tr style="height: 88px;">
<td style="width: 334.098px; height: 88px;">H<strong><span>e</span></strong>re again is our expression for Q1, copied over from the previous slide and we may remember from earlier in our workings that we determined this particular relationship; X squared plus Y squared is equal to this particular complex expression.</td>
<td style="width: 235.902px; height: 88px;"><span>這裡再次是我們對 Q1 的表達，從上一張幻燈片複製過來，我們可能還記得在我們早期的說明中，確定了這種特殊關係； X 平方加 Y 平方等於這個特定的複雜表達式。</span></td>
</tr>
<tr style="height: 88px;">
<td style="width: 334.098px; height: 88px;"><span>So I can substitute that in and do some simplification and I end up with this slightly less complex expression for Q1.</span></td>
<td style="width: 235.902px; height: 88px;"><span>因此，我可以將其替換並進行一些簡化，最終得到 Q1 的這個稍微不那麼複雜的表達式。</span></td>
</tr>
<tr style="height: 88px;">
<td style="width: 334.098px; height: 88px;"><span>And it is the same expression that I got following the geometric approach in the previous section.</span></td>
<td style="width: 235.902px; height: 88px;"><span>這與我在上一節中遵循幾何方法求出的表達式一模一樣。</span></td>
</tr>
</tbody>
</table>
<p></p>
<p></p>
<h2>w16 fossil</h2>
<p>步驟說明</p>
<p>1.進入gogs網頁&gt;新增儲存庫</p>
<p><img alt="" height="300" src="/images/msedge_JeRy760KrH.png" width="400"/></p>
<p>2.進入黑窗打以下程式</p>
<p><img caption="false" height="300" src="/images/cmd_FVett7sAge.png" width="400"/></p>
<p>3.完成狀態</p>
<p><img alt="" height="300" src="/images/msedge_zHZMrUBY34.png" width="400"/></p>
<h2>四驅車</h2>
<h3>coppeliasim</h3>
<h4><strong>w12-13</strong></h4>
<p>進度:coppelia模擬+lua控制</p>
<p>問題:原先車子的前後輪是分別為一體的,只有兩個joint能帶動輪胎,所以車子僅能坐上下及左右的控制</p>
<p>檔案下載處:<a href="/downloads/S3-2.zip">四驅車</a></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/1p7-JPmSXnQ" title="YouTube video player" width="560"></iframe></p>
<h4><strong>w14</strong></h4>
<p>問題:原先車子的前後輪示一體成形的，這樣連結時前後共只有兩根旋轉軸，無法讓車子轉彎</p>
<p>進度:將輪胎各別分解出來，新增coppelia中joint的數量,使每顆輪胎都能由相對的joint帶動+修改lua程式</p>
<p>修改內容:使每顆輪胎都有對應的joint</p>
<p><img alt="" height="230" src="/images/coppeliaSim_qWmoBt5ycG.png" width="350"/> <img alt="" height="230" src="/images/coppeliaSim_XRVj15bLQG.png" width="350"/></p>
<p>coppelia檔案下載處:<a href="/downloads/S3-22test.zip">S3-22test.zip</a></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/ezSKHlxZ1FI" title="YouTube video player" width="560"></iframe></p>
<p><strong>w15進度</strong></p>
<p>內容:用python remote api 控制</p>
<p>api.py檔案下載處:<a href="/downloads/S3-22test.zip">S3-22test-api.zip</a></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/VkEcGY76lNA" title="YouTube video player" width="560"></iframe></p>
<h1>gitlab問題解決說明</h1>
<p><strong>以下是被flagged後，向官方進行申述的內容</strong></p>
<p>5/20發送的請求:我想說先試看看就直接打<span>Your account has been flagged.</span></p>
<p><span><img alt="" height="300" src="/images/chrome_hd9KVs9LO6.png" width="400"/></span></p>
<p><span>5/26來信說明我的倉儲已恢復</span></p>
<p><span><img alt="" height="300" src="/images/yVY8NCiz5v.png" width="400"/></span></p>
<p>內容:上周因為github出現了帳號被flagged的問題,所以另外<strong>在gitlab中另增倉儲</strong>,但5/26github回覆了我的倉儲已恢復正常</p>
<p>問題:當時我是直接把cd2021倉儲直接git clone下來,導致gitlab和github沒有同步,因此我對github做了退版次的動作,讓它回復到出現問題之前</p>
<p><strong>以下是我對stage3-bg5的動作</strong></p>
<p>1.新增空的倉儲</p>
<p>點選 creat blank project/repository</p>
<p><img alt="" height="350" src="/images/chrome_ptapUShISa.png" width="500"/></p>
<p><span>2.輸入要同步的倉儲名稱</span></p>
<p><span><img alt="" height="350" src="/images/chrome_i6AF2n5lX9.png" width="500"/></span></p>
<p><span>3.記得進到ci.yml檔把master改成main</span></p>
<p><span><img alt="" height="350" src="/images/SciTE_H7ENEgnAaY.png" width="400"/></span></p>
<p><span>4.進入小黑窗執行以下步驟</span></p>
<p><span><img alt="" height="350" src="/images/cmd_cx5ascNJKL.png" width="500"/></span></p>
<p><span><img alt="" height="350" src="/images/cmd_Acwys58oyS.png" width="500"/></span></p>
<p><span><img alt="" height="350" src="/images/cmd_4AO0C2Q6aL.png" width="500"/></span></p>
<h1>影片區</h1>
<h2>stage1每周影片區</h2>
<p>W1</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/5hpsTemq_AI" width="560"></iframe></p>
<p>W2-3</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/b_QrnGpD-zU" width="560"></iframe></p>
<p>W4</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/xJpD0zKPf2I" width="560"></iframe></p>
<p><span></span>w4 上台報告</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/7pR3s6MWCEE" title="YouTube video player" width="560"></iframe></p>
<h2>stage2每周影片區</h2>
<p>討論主題</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/ZHwuVze7hMQ" title="YouTube video player" width="560"></iframe>04/14小組討論</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/zgNs5d8csDY" title="YouTube video player" width="560"></iframe></p>
<p>實體影片介紹</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/P-eBZLKueTQ" title="YouTube video player" width="560"></iframe></p>
<p>使用solidworks2014做動畫模擬<iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/xQkyIcfL3Gg" title="YouTube video player" width="560"></iframe></p>
<p>w9報告影片</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/wFfzY5aO7r8" title="YouTube video player" width="560"></iframe></p>
<h1>W5</h1>
<p><strong>2a-stage1</strong></p>
<p>影片連結處</p>
<p><a href="https://drive.google.com/drive/folders/1jB-7Kkpi2ODu6UPnkQ5OmR_EYWKVF2nH?usp=sharing">https://drive.google.com/drive/folders/1jB-7Kkpi2ODu6UPnkQ5OmR_EYWKVF2nH?usp=sharing</a></p>
<table style="width: 433.667px;">
<tbody>
<tr style="height: 17px;">
<td style="width: 63px; height: 17px;"><strong>組別</strong></td>
<td style="width: 64px; height: 17px;"><strong>影片時間</strong></td>
<td style="width: 168.667px; height: 17px;"><strong>名稱</strong></td>
</tr>
<tr style="height: 16px;">
<td style="width: 63px; height: 16px;">第1組</td>
<td style="width: 64px; height: 16px;">3:40</td>
<td style="width: 168.667px; height: 16px;">cd2021_stage1_2a_g1.mp4</td>
</tr>
<tr style="height: 16px;">
<td style="width: 63px; height: 16px;">第2組</td>
<td style="width: 64px; height: 16px;">3:04</td>
<td style="width: 168.667px; height: 16px;"><span>cd2021_stage1_2a_g2.mp4</span></td>
</tr>
<tr style="height: 16px;">
<td style="width: 63px; height: 16px;">第3組</td>
<td style="width: 64px; height: 16px;">2:24</td>
<td style="width: 168.667px; height: 16px;"><span>cd2021_stage1_2a_g3.mp4</span></td>
</tr>
<tr style="height: 16px;">
<td style="width: 63px; height: 16px;">第4組</td>
<td style="width: 64px; height: 16px;">3:19</td>
<td style="width: 168.667px; height: 16px;"><span>cd2021_stage1_2a_g4.mp4</span></td>
</tr>
<tr style="height: 16px;">
<td style="width: 63px; height: 16px;">第5組</td>
<td style="width: 64px; height: 16px;">3:38</td>
<td style="width: 168.667px; height: 16px;"><span>cd2021_stage1_2a_g5.mp4</span></td>
</tr>
<tr style="height: 16px;">
<td style="width: 63px; height: 16px;">第6組</td>
<td style="width: 64px; height: 16px;">5:50</td>
<td style="width: 168.667px; height: 16px;"><span>cd2021_stage1_2a_g6.mp4</span></td>
</tr>
<tr style="height: 16px;">
<td style="width: 63px; height: 16px;">第7組</td>
<td style="width: 64px; height: 16px;">2:26</td>
<td style="width: 168.667px; height: 16px;"><span>cd2021_stage1_2a_g7.mp4</span></td>
</tr>
<tr style="height: 16px;">
<td style="width: 63px; height: 16px;">第8組</td>
<td style="width: 64px; height: 16px;">1:33</td>
<td style="width: 168.667px; height: 16px;"><span>cd2021_stage1_2a_g8.mp4</span></td>
</tr>
<tr style="height: 16px;">
<td style="width: 63px; height: 16px;">第9組</td>
<td style="width: 64px; height: 16px;">1:18</td>
<td style="width: 168.667px; height: 16px;"><span>cd2021_stage1_2a_g9.mp4</span></td>
</tr>
<tr style="height: 16px;">
<td style="width: 63px; height: 16px;">第10組</td>
<td style="width: 64px; height: 16px;">3:08</td>
<td style="width: 168.667px; height: 16px;"><span>cd2021_stage1_2a_g10.mp4</span></td>
</tr>
<tr style="height: 16px;">
<td style="width: 63px; height: 16px;">第11組</td>
<td style="width: 64px; height: 16px;">1:04</td>
<td style="width: 168.667px; height: 16px;"><span>cd2021_stage1_2a_g11.mp4</span></td>
</tr>
<tr style="height: 16px;">
<td style="width: 63px; height: 16px;">第12組</td>
<td style="width: 64px; height: 16px;">1:59</td>
<td style="width: 168.667px; height: 16px;"><span>cd2021_stage1_2a_g12.mp4</span></td>
</tr>
<tr style="height: 16px;">
<td style="width: 63px; height: 16px;">第13組</td>
<td style="width: 64px; height: 16px;">2:17</td>
<td style="width: 168.667px; height: 16px;"><span>cd2021_stage1_2a_g13.mp4</span></td>
</tr>
<tr style="height: 16px;">
<td style="width: 63px; height: 16px;">第14組</td>
<td style="width: 64px; height: 16px;">2:31</td>
<td style="width: 168.667px; height: 16px;"><span>cd2021_stage1_2a_g14.mp4</span></td>
</tr>
<tr style="height: 16px;">
<td style="width: 63px; height: 16px;">第15組</td>
<td style="width: 64px; height: 16px;">0:50</td>
<td style="width: 168.667px; height: 16px;"><span>cd2021_stage1_2a_g15.mp4</span></td>
</tr>
<tr style="height: 16px;">
<td style="width: 63px; height: 16px;">第16組</td>
<td style="width: 64px; height: 16px;">1:09</td>
<td style="width: 168.667px; height: 16px;"><span>cd2021_stage1_2a_g16.mp4</span></td>
</tr>
<tr style="height: 16px;">
<td style="width: 63px; height: 16px;">第17組</td>
<td style="width: 64px; height: 16px;">2:31</td>
<td style="width: 168.667px; height: 16px;"><span>cd2021_stage1_2a_g17.mp4</span></td>
</tr>
<tr style="height: 16px;">
<td style="width: 63px; height: 16px;">第18組</td>
<td style="width: 64px; height: 16px;">1:57</td>
<td style="width: 168.667px; height: 16px;"><span>cd2021_stage1_2a_g18.mp4</span></td>
</tr>
<tr style="height: 16px;">
<td style="width: 63px; height: 16px;">第19組</td>
<td style="width: 64px; height: 16px;">2:18</td>
<td style="width: 168.667px; height: 16px;"><span>cd2021_stage1_2a_g19.mp4</span></td>
</tr>
<tr style="height: 16px;">
<td style="width: 63px; height: 16px;">第20組</td>
<td style="width: 64px; height: 16px;">4:06</td>
<td style="width: 168.667px; height: 16px;"><span>cd2021_stage1_2a_g20.mp4</span></td>
</tr>
<tr style="height: 16px;">
<td style="width: 63px; height: 16px;">第21組</td>
<td style="width: 64px; height: 16px;">2:20</td>
<td style="width: 168.667px; height: 16px;"><span>cd2021_stage1_2a_g21.mp4</span></td>
</tr>
<tr style="height: 16.4792px;">
<td style="width: 63px; height: 16.4792px;">第22組</td>
<td style="width: 64px; height: 16.4792px;">5:13</td>
<td style="width: 168.667px; height: 16.4792px;"><span>cd2021_stage1_2a_g22.mp4</span></td>
</tr>
<tr style="height: 16px;">
<td style="width: 63px; height: 16px;">第23組</td>
<td style="width: 64px; height: 16px;">8:19</td>
<td style="width: 168.667px; height: 16px;"><span>cd2021_stage1_2a_g23.mp4</span></td>
</tr>
</tbody>
</table>
<h1>W16</h1>
<h4><strong>1. Onshape 零組件繪製</strong></h4>
<p>圖檔網址:<a href="https://cad.onshape.com/documents/a6adda143659f4830a64b826/w/c52c50d2634992ffe5c99dd4/e/013319cd704e496d14c729d0">https://cad.onshape.com/documents/a6adda143659f4830a64b826/w/c52c50d2634992ffe5c99dd4/e/013319cd704e496d14c729d0</a></p>
<p>STL檔案下載處:<a href="/downloads/W16.7z">W16.7z</a></p>
<p>以下是我畫二軸機械臂的操作，連桿中各連接處沒畫孔的原因是因為在COPPELIA中可用工具直接將孔軸對正，因此省略了此畫圖步驟。</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/lVVmNanbamk" title="YouTube video player" width="560"></iframe></p>
<p><strong>2. 建立 CoppeliaSim 4.1.0 MTB robot 場景</strong></p>
<p><strong>Google Drive:<a href="https://drive.google.com/file/d/14qllct0EMd6-HGJUDBmpFA_5vtLuIr1K/view?usp=sharing">檔案下載處</a></strong></p>
<p>以下影片過程為連接各軸件的步驟，包含加入末端吸盤的過程</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/TWkeBA2z0jw" title="YouTube video player" width="560"></iframe></p>
<p><strong>3. 手臂末端加入 components-gripper-suction pad 吸盤</strong></p>
<p><strong>Lua鍵盤控制程式代碼說明</strong></p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">方向鍵左&gt;代碼"2009"---控制joint1向左轉
方向鍵右&gt;代碼"2010"---控制joint1向右轉
方向鍵上&gt;代碼"2007"---控制joint2向左轉
方向鍵下&gt;代碼"2008"---控制joint2向右轉
s&gt;代碼"115"---吸盤向下
w&gt;代碼"119"---吸盤向上
空白鍵&gt;代碼"32"---放下物體</pre>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/Qv3Liy41oyY" title="YouTube video player" width="560"></iframe></p>
<p>程式碼</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">function sysCall_init()
    joint1=sim.getObjectHandle('joint1')
    joint2=sim.getObjectHandle('joint2')
    jointz=sim.getObjectHandle('jointz')
    joint3=sim.getObjectHandle('joint3')
    sim.setJointTargetPosition(joint1,0)
    sim.setJointTargetPosition(joint2,0)
    sim.setJointTargetPosition(joint3,0)
    sim.setJointTargetPosition(jointz,0)
    deg1=0
    deg2=0
    deg3=0
end
function sysCall_actuation()
    message,auxiliaryData=sim.getSimulatorMessage()
    while message~=-1 do
        if (message==sim.message_keypress) then
            if (auxiliaryData[1]==2009) then
            deg1=deg1-1
            deg3=deg2-deg1
            sim.setJointTargetPosition(joint1,deg1*math.pi/180)
            end
            if (auxiliaryData[1]==2010) then
            deg1=deg1+1
            deg3=deg2-deg1
            sim.setJointTargetPosition(joint1,deg1*math.pi/180)
            end
            if (auxiliaryData[1]==2007) then
            deg2=deg2-1
            deg3=deg1-deg2
            sim.setJointTargetPosition(joint2,deg2*math.pi/180)
            end
            if (auxiliaryData[1]==2008) then
            deg2=deg2+1
            deg3=deg1-deg2
            sim.setJointTargetPosition(joint2,deg2*math.pi/180)
            end
            if (auxiliaryData[1]==115) then
                sim.setJointTargetPosition(jointz,-0.023)
                sim.setIntegerSignal("pad_switch",1)
            end
            if (auxiliaryData[1]==119) then
                sim.setJointTargetPosition(jointz,0)
            end
            if (auxiliaryData[1]==32) then
                sim.setIntegerSignal("pad_switch",0)
            end
            sim.setJointTargetPosition(joint3,deg3*math.pi/180)
        end
    message,auxiliaryData=sim.getSimulatorMessage()
    end
end</pre>
<p><strong> 4. 逆向運動學函式</strong></p>
<p>以程式迴圈方式執行 W15 兩個指定位置之方塊取放</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/7YQ1rI2aINY" title="YouTube video player" width="560"></iframe></p>
<p>程式碼</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">function moving(x,y)
    a=0.4
    b=0.4
    c=math.pow((math.pow(x,2)+math.pow(y,2)),0.5)
    s=(a+b+c)/2
    area=math.pow((s*(s-a)*(s-b)*(s-c)),0.5)
    h=2*area/c
    deg1_base=math.atan(x/y)
    if x&lt;0 and y&lt;0 then
        deg1_base=deg1_base+math.pi
    end
    deg1_tri=math.asin(h/a)
    deg1=deg1_base+deg1_tri
    deg2=math.pi-(0.5*math.pi-deg1_tri)-math.acos(h/b)
    deg3=(deg2-deg1)
    sim.setJointTargetPosition(joint01,deg1)
    sim.setJointTargetPosition(joint02,-deg2)
    sim.setJointTargetPosition(joint03,deg3)
end
function sysCall_threadmain()
    joint01=sim.getObjectHandle('joint1')
    joint02=sim.getObjectHandle('joint2')
    joint03=sim.getObjectHandle('joint3')
    jointz=sim.getObjectHandle('jointz')
    sim.setJointTargetPosition(joint01,0)
    sim.setJointTargetPosition(joint02,0)
    sim.setJointTargetPosition(joint03,0)
    sim.setJointTargetPosition(jointz,0)
    sim.wait(5)
    sim.setIntegerSignal("pad_switch",1)
    sim.setJointTargetPosition(jointz,-0.023)
    sim.wait(5)
    sim.setJointTargetPosition(jointz,0)
    sim.wait(5)
    while sim.getSimulationState()~=sim.simulation_advancing_abouttostopre do
        moving(0.2,0.7)
        sim.wait(5)
        sim.setIntegerSignal("pad_switch",0)
        sim.wait(5)
        sim.setIntegerSignal("pad_switch",1)
        sim.setJointTargetPosition(jointz,-0.023)
        sim.wait(5)
        sim.setJointTargetPosition(jointz,0)
        sim.wait(5)
        moving(-0.3,-0.55)
        sim.wait(5)
        sim.setIntegerSignal("pad_switch",0)
        sim.wait(5)
        sim.setIntegerSignal("pad_switch",1)
        sim.setJointTargetPosition(jointz,-0.023)
        sim.wait(5)
        sim.setJointTargetPosition(jointz,0)
        sim.wait(5)
    end
end</pre>
<p><strong> 5. Python remote API 逆向運動學函式</strong></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/LN4IYzWxY_o" title="YouTube video player" width="560"></iframe></p>
<p>程式碼</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">import sim as vrep
import math
import random
import time
import math

def moving(x,y):
    a=0.4
    b=0.4
    c=math.pow((math.pow(x,2)+math.pow(y,2)),0.5)
    s=(a+b+c)/2
    area=math.pow((s*(s-a)*(s-b)*(s-c)),0.5)
    h=2*area/c
    deg1_base=math.atan(x/y)
    if x&lt;0 and y&lt;0 :
        deg1_base=deg1_base+math.pi
    deg1_tri=math.asin(h/a)
    deg1=deg1_base+deg1_tri
    deg2=math.pi-(0.5*math.pi-deg1_tri)-math.acos(h/b)
    deg3=(deg2-deg1)
    vrep.simxSetJointTargetPosition(clientID,joint01,deg1,opmode)
    vrep.simxSetJointTargetPosition(clientID,joint02,deg2,opmode)
    vrep.simxSetJointTargetPosition(clientID,joint03,deg3,opmode)


print ('Start')
 
vrep.simxFinish(-1)
 
clientID = vrep.simxStart('127.0.0.1', 19997, True, True, 5000, 5)

if clientID != -1:
    print ('Connected to remote API server')

    res = vrep.simxAddStatusbarMessage(
        clientID, "40823204",
        vrep.simx_opmode_oneshot)
    if res not in (vrep.simx_return_ok, vrep.simx_return_novalue_flag):
        print("Could not add a message to the status bar.")


    opmode = vrep.simx_opmode_oneshot_wait
    STREAMING = vrep.simx_opmode_streaming


    vrep.simxStartSimulation(clientID, opmode)
    ret,joint01=vrep.simxGetObjectHandle(clientID,"joint1",opmode)
    ret,joint02=vrep.simxGetObjectHandle(clientID,"joint2",opmode)
    ret,joint03=vrep.simxGetObjectHandle(clientID,"joint3",opmode)
    ret,jointz=vrep.simxGetObjectHandle(clientID,"jointz",opmode)
    
    vrep.simxSetJointTargetPosition(clientID,joint01,0,opmode)
    vrep.simxSetJointTargetPosition(clientID,joint02,0,opmode)
    vrep.simxSetJointTargetPosition(clientID,joint03,0,opmode)
    vrep.simxSetIntegerSignal(clientID,"pad_switch",1,opmode)
    vrep.simxSetJointTargetPosition(clientID,jointz,-0.023,opmode)
    time.sleep(1)
    vrep.simxSetJointTargetPosition(clientID,jointz,0,opmode)
    while True:
        moving(0.2,0.7)
        time.sleep(1)
        vrep.simxSetIntegerSignal(clientID,"pad_switch",0,opmode)
        time.sleep(1)
        vrep.simxSetIntegerSignal(clientID,"pad_switch",1,opmode)
        vrep.simxSetJointTargetPosition(clientID,jointz,-0.023,opmode)
        time.sleep(1)
        vrep.simxSetJointTargetPosition(clientID,jointz,0,opmode)
        moving(-0.3,-0.55)
        time.sleep(1)
        vrep.simxSetIntegerSignal(clientID,"pad_switch",0,opmode)
        time.sleep(1)
        vrep.simxSetIntegerSignal(clientID,"pad_switch",1,opmode)
        vrep.simxSetJointTargetPosition(clientID,jointz,-0.023,opmode)
        time.sleep(1)
        vrep.simxSetJointTargetPosition(clientID,jointz,0,opmode)</pre>
<p></p>
<p><strong>操作心得</strong></p>
<p>操作完老師布置的幾項任務後，我覺得最基本就是匯入場景的部分，那麼在程式的部分就需要更加深入地去理解，感謝40823214林厚宇同學開設群組詳細教導，讓我們都跟得上進度。</p>